[33mcommit ff5394e46a188e6754b3c3bc59012c9ff53ffa86[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Ishan Chenthooran <ishanchenthooran@gmail.com>
Date:   Wed Jan 8 00:58:15 2025 -0500

    Add updated implementation for SwingSense

[1mdiff --git a/SwingSense.git/HEAD b/SwingSense.git/HEAD[m
[1mnew file mode 100644[m
[1mindex 0000000..b870d82[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/HEAD[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mref: refs/heads/main[m
[1mdiff --git a/SwingSense.git/config b/SwingSense.git/config[m
[1mnew file mode 100644[m
[1mindex 0000000..56b7b0b[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/config[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m[core][m
[32m+[m	[32mrepositoryformatversion = 0[m
[32m+[m	[32mfilemode = false[m
[32m+[m	[32mbare = true[m
[32m+[m	[32msymlinks = false[m
[32m+[m	[32mignorecase = true[m
[32m+[m[32m[remote "origin"][m
[32m+[m	[32murl = https://github.com/ishanchenthooran/SwingSense.git[m
[32m+[m	[32mfetch = +refs/heads/*:refs/remotes/origin/*[m
[1mdiff --git a/SwingSense.git/description b/SwingSense.git/description[m
[1mnew file mode 100644[m
[1mindex 0000000..498b267[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/description[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mUnnamed repository; edit this file 'description' to name the repository.[m
[1mdiff --git a/SwingSense.git/filter-repo/already_ran b/SwingSense.git/filter-repo/already_ran[m
[1mnew file mode 100644[m
[1mindex 0000000..db0c327[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/filter-repo/already_ran[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mThis file exists to allow you to filter again without --force,[m
[32m+[m[32mand to specify that metadata files should be updated instead[m
[32m+[m[32mof rewritten[m
\ No newline at end of file[m
[1mdiff --git a/SwingSense.git/filter-repo/changed-refs b/SwingSense.git/filter-repo/changed-refs[m
[1mnew file mode 100644[m
[1mindex 0000000..ab09a9b[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/filter-repo/changed-refs[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mrefs/heads/main[m
[1mdiff --git a/SwingSense.git/filter-repo/commit-map b/SwingSense.git/filter-repo/commit-map[m
[1mnew file mode 100644[m
[1mindex 0000000..cae4854[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/filter-repo/commit-map[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mold                                      new[m
[32m+[m[32m5fc8d95b8ea6d7b1fcf0d24a0dff23702c3825b9 6aad91c34ed449bff6010f89f3b9983e16031b6c[m
[32m+[m[32mf69fc779bb1b80c573b5ed0ce21fe7ff2c47a7c5 cf1dd5f0a2c5038c77334ec7642b33910c03fa90[m
[1mdiff --git a/SwingSense.git/filter-repo/first-changed-commits b/SwingSense.git/filter-repo/first-changed-commits[m
[1mnew file mode 100644[m
[1mindex 0000000..19af7d3[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/filter-repo/first-changed-commits[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mf69fc779bb1b80c573b5ed0ce21fe7ff2c47a7c5 cf1dd5f0a2c5038c77334ec7642b33910c03fa90[m
[1mdiff --git a/SwingSense.git/filter-repo/ref-map b/SwingSense.git/filter-repo/ref-map[m
[1mnew file mode 100644[m
[1mindex 0000000..bfd078d[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/filter-repo/ref-map[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mold                                      new                                      ref[m
[32m+[m[32m5fc8d95b8ea6d7b1fcf0d24a0dff23702c3825b9 6aad91c34ed449bff6010f89f3b9983e16031b6c refs/heads/main[m
[1mdiff --git a/SwingSense.git/filter-repo/suboptimal-issues b/SwingSense.git/filter-repo/suboptimal-issues[m
[1mnew file mode 100644[m
[1mindex 0000000..701e20c[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/filter-repo/suboptimal-issues[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mNo filtering problems encountered.[m
[1mdiff --git a/SwingSense.git/hooks/applypatch-msg.sample b/SwingSense.git/hooks/applypatch-msg.sample[m
[1mnew file mode 100644[m
[1mindex 0000000..a5d7b84[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/hooks/applypatch-msg.sample[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m#[m
[32m+[m[32m# An example hook script to check the commit log message taken by[m
[32m+[m[32m# applypatch from an e-mail message.[m
[32m+[m[32m#[m
[32m+[m[32m# The hook should exit with non-zero status after issuing an[m
[32m+[m[32m# appropriate message if it wants to stop the commit.  The hook is[m
[32m+[m[32m# allowed to edit the commit message file.[m
[32m+[m[32m#[m
[32m+[m[32m# To enable this hook, rename this file to "applypatch-msg".[m
[32m+[m
[32m+[m[32m. git-sh-setup[m
[32m+[m[32mcommitmsg="$(git rev-parse --git-path hooks/commit-msg)"[m
[32m+[m[32mtest -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}[m
[32m+[m[32m:[m
[1mdiff --git a/SwingSense.git/hooks/commit-msg.sample b/SwingSense.git/hooks/commit-msg.sample[m
[1mnew file mode 100644[m
[1mindex 0000000..b58d118[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/hooks/commit-msg.sample[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m#[m
[32m+[m[32m# An example hook script to check the commit log message.[m
[32m+[m[32m# Called by "git commit" with one argument, the name of the file[m
[32m+[m[32m# that has the commit message.  The hook should exit with non-zero[m
[32m+[m[32m# status after issuing an appropriate message if it wants to stop the[m
[32m+[m[32m# commit.  The hook is allowed to edit the commit message file.[m
[32m+[m[32m#[m
[32m+[m[32m# To enable this hook, rename this file to "commit-msg".[m
[32m+[m
[32m+[m[32m# Uncomment the below to add a Signed-off-by line to the message.[m
[32m+[m[32m# Doing this in a hook is a bad idea in general, but the prepare-commit-msg[m
[32m+[m[32m# hook is more suited to it.[m
[32m+[m[32m#[m
[32m+[m[32m# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')[m
[32m+[m[32m# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"[m
[32m+[m
[32m+[m[32m# This example catches duplicate Signed-off-by lines.[m
[32m+[m
[32m+[m[32mtest "" = "$(grep '^Signed-off-by: ' "$1" |[m
[32m+[m	[32m sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {[m
[32m+[m	[32mecho >&2 Duplicate Signed-off-by lines.[m
[32m+[m	[32mexit 1[m
[32m+[m[32m}[m
[1mdiff --git a/SwingSense.git/hooks/fsmonitor-watchman.sample b/SwingSense.git/hooks/fsmonitor-watchman.sample[m
[1mnew file mode 100644[m
[1mindex 0000000..23e856f[m
[1m--- /dev/null[m
[1m+++ b/SwingSense.git/hooks/fsmonitor-watchman.sample[m
[36m@@ -0,0 +1,174 @@[m
[32m+[m[32m#!/usr/bin/perl[m
[32m+[m
[32m+[m[32muse strict;[m
[32m+[m[32muse warnings;[m
[32m+[m[32muse IPC::Open2;[m
[32m+[m
[32m+[m[32m# An example hook script to integrate Watchman[m
[32m+[m[32m# (https://facebook.github.io/watchman/) with git to speed up detecting[m
[32m+[m[32m# new and modified files.[m
[32m+[m[32m#[m
[32m+[m[32m# The hook is passed a version (currently 2) and last update token[m
[32m+[m[32m# formatted as a string and outputs to stdout a new update token and[m
[32m+[m[32m# all files that have been modified since the update token. Paths must[m
[32m+[m[32m# be relative to the root of the working tree and separated by a single NUL.[m
[32m+[m[32m#[m
[32m+[m[32m# To enable this hook, rename this file to "query-watchman" and set[m
[32m+[m[32m# 'git config core.fsmonitor .git/hooks/query-watchman'[m
[32m+[m[32m#[m
[32m+[m[32mmy ($version, $last_update_token) = @ARGV;[m
[32m+[m
[32m+[m[32m# Uncomment for debugging[m
[32m+[m[32m# print STDERR "$0 $version $last_update_token\n";[m
[32m+[m
[32m+[m[32m# Check the hook interface version[m
[32m+[m[32mif ($version ne 2) {[m
[32m+[m	[32mdie "Unsupported query-fsmonitor hook version '$version'.\n" .[m
[32m+[m	[32m    "Falling back to scanning...\n";[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmy $git_work_tree = get_working_dir();[m
[32m+[m
[32m+[m[32mmy $retry = 1;[m
[32m+[m
[32m+[m[32mmy $json_pkg;[m
[32m+[m[32meval {[m
[32m+[m	[32mrequire JSON::XS;[m
[32m+[m	[32m$